.header {
	position: fixed;
	inline-size: 100%;
	inset-inline-start: 0;
	inset-block-start: 0;
	z-index: 50;
	transition: all 0.5s;
	background: var(--header-bg-color);
	backdrop-filter: blur(50px);
	// .header__container
	&__container {
		padding-block: toRem(12);
		display: grid;
		gap: toRem(20);
		align-items: center;
		grid-template-columns: auto 1fr;

		@media (min-width: toEm(768)) and (max-width: toEm(1199.98)) {
			grid-template-columns: auto 1fr auto;
		}
		@media (min-width: toEm(992)) {
			padding-block: toRem(16);
			gap: toRem(30);
		}
		@media (min-width: toEm(1200)) {
			grid-template-columns: auto 1fr auto;
		}
	}
	// .header__logo
	&__logo {
		position: relative;
		z-index: 5;
		inline-size: toRem(32);
		// @media (min-width: toEm(992)) {
		// 	inline-size: toRem(199);
		// }
	}
	// .header__menu
	&__menu {
	}
	&__actions {
		position: relative;
		z-index: 5;
		justify-self: end;
	}

	// &--scroll {
	// 	background-color: rgba(20, 20, 20, 0.8);
	// }
}
.menu {
	padding: toRem(85) toRem(15) toRem(30) toRem(15);
	@media (min-width: toEm(768)) {
		padding: toRem(5);
	}
	@media (min-width: toEm(992)) {
		padding: toRem(14);
	}
	@media (max-width: toEm(767.98)) {
		position: fixed;
		inline-size: 100%;
		// block-size: 100%;
		inset-inline-start: -100%;
		inset-block-start: 0;
		z-index: 2;
		overflow: auto;
		transition: inset-inline-start 0.5s;

		.menu-open & {
			inset-inline-start: 0%;
		}
		&::before {
			content: "";
			block-size: toRem(65);
			inline-size: 100%;
			position: fixed;
			inset-inline-start: -100%;
			inset-block-start: 0;
			transition: inset-inline-start 0.5s;
			background-color: var(--dark-color-2);

			.menu-open & {
				inset-inline-start: 0%;
			}
		}
	}
	// .menu__icon
	&__icon {
	}
	// .menu__body
	&__body {
	}
	// .menu__list
	&__list {
		color: var(--dark-color-01);
		font-size: 16px;
		line-height: 1.25; /* 125% */

		column-gap: toRem(10);
		row-gap: toRem(3);
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;

		max-width: 44.25rem;
		margin: 0 auto;

		@media (max-width: toEm(767.98)) {
			flex-direction: column;
			align-items: flex-end;
			row-gap: toRem(15);
		}
	}
	// .menu__item
	&__item {
	}
	// .menu__link
	&__link {
		padding-inline: toRem(8);
		// padding-block: toRem(8);
		transition:color 0.3s;

		@media (any-hover: hover) {
			&:hover {
				color: var(--green-color);
			}
		}
		// @media (min-width: toEm(992)) and (max-width: toEm(1629.98)) {
		// 	padding-inline: toRem(20);
		// 	padding-block: toRem(10);
		// }
		// @media (min-width: toEm(1630)) {
		// 	padding-inline: toRem(24);
		// 	padding-block: toRem(14);
		// }
		// @media (max-width: toEm(767.98)) {
		// 	// font-size: toRem(24);
		// }
	}
}
.icon-menu {
	display: none;
	@media (max-width: toEm(767.98)) {
		display: block;
		inline-size: toRem(30);
		block-size: toRem(18);
		position: relative;
		&::before,
		&::after,
		span {
			content: "";
			position: absolute;
			block-size: toRem(2);
			inline-size: 100%;
			inset-inline-end: 0;
			background-color: var(--dark-color-01);
			transition: all 0.5s;
		}
		&::before {
			inset-block-start: 0;
			.menu-open & {
				inset-block-start: 50%;
				transform: translateY(-50%) rotate(-45deg);
			}
		}
		&::after {
			inset-block-end: 0;
			inline-size: 50%;
			.menu-open & {
				inset-block-end: 50%;
				inline-size: 100%;
				transform: translateY(50%) rotate(45deg);
			}
		}
		span {
			inset-block-start: 50%;
			transform: translateY(-50%);
			.menu-open & {
				inline-size: 0;
			}
		}
	}
}
.actions-header {
	font-size: toRem(16);
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	gap: toRem(24);
// 	// .actions-header__item
	&__item {
		transition: color 0.3s;

	// 	@media (min-width: toEm(1630)) {
	// 		// font-size: toRem(27);
	// 	}
		@media (any-hover: hover) {
			&:hover {
				color: var(--green-color);
			}
		}
		&--color {
			transition: all 0.3s;
			@media (any-hover: hover) {
				&:hover {
					background-color: var(--green-color);
					color: var(--bg-color);
				}
			}
		}
	// }
	// @media (min-width: toEm(1630)) {
	// 	gap: toRem(37);
	}
}
